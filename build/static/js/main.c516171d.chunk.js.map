{"version":3,"sources":["utils/theme.js","components/Authentication/SignUp.js","components/Authentication/ConfirmSignUp.js","components/Authentication/SignIn.js","assets/SFSA-06.png","components/NavBar/DrawerComponent/DrawerComponent.js","components/NavBar/NavBar.js","components/Layout.js","pages/HomePage.js","pages/DetectDisease.js","pages/AddUser.js","pages/AddAdmin.js","pages/AddPlant.js","pages/Search.js","components/SearchComponent.js","pages/ScanPlant.js","App.js","reportWebVitals.js","aws-exports.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","SignUp","props","signUp","onChange","formState","updateFormState","className","fontSize","Grid","container","spacing","item","xs","md","lg","TextField","name","id","type","variant","label","fullWidth","Button","color","onClick","Divider","formType","ConfirmSignUp","confirmSignUp","authCode","SignIn","signIn","useStyles","makeStyles","menuIconContainer","marginLeft","DrawerComponent","menuItems","useState","openDrawer","setOpenDrawer","classes","history","useHistory","Drawer","drawer","anchor","onClose","open","List","list","map","ListItem","divider","button","e","path","push","ListItemIcon","ListItemText","title","IconButton","icons","iconLogo","accountButton","background","navbarSpacing","marginTop","icon","Navbar","children","value","setValue","anchorEl","setAnchorEl","handleMenuClose","useTheme","isMatch","useMediaQuery","breakpoints","down","AppBar","Toolbar","Typography","Tabs","newValue","console","log","indicatorColor","Tab","disableRipple","currentTarget","Menu","style","Boolean","MenuItem","Auth","signOut","page","height","Layout","root","minHeight","backgroundImage","backgroundSize","backgroundRepeat","heading","paddingTop","colorText","textAlign","titleLower","goDown","backgroundColor","borderRadius","HomePage","checked","setChecked","useEffect","CssBaseline","Container","Collapse","in","timeout","collapsedHeight","to","smooth","containerStyle","imagePanel","border","buttons","display","marginBottom","results","field","Alert","elevation","AddUser","givenNames","setGivenNames","lastName","setLastName","email","setEmail","mobileNumber","setMobileNumber","business","setBusiness","password","setPassword","confirmpassword","setConfirmpassword","givenNamesError","setGivenNamesError","lastNameError","setLastNameError","emailError","setEmailError","mobileNumberError","setMobileNumberError","passwordError","setPasswordError","confirmpasswordError","setConfirmpasswordError","React","setOpen","handleClose","event","reason","noValidate","autoComplete","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","target","reset","required","error","disableElevation","size","endIcon","Snackbar","autoHideDuration","severity","AddAdmin","setGiveNamesError","AddPlant","sm","align","placeholder","multiline","rows","search","width","searchfield","searchFieldIcon","paddingRight","withStyles","head","common","black","white","TableCell","action","hover","TableRow","userPaper","padding","margin","adminPaper","plantPaper","paperTitle","flexGrow","subTitle","paddingLeft","Search","filter","setFilter","users","setUsers","admins","setAdmins","plants","setPlants","checkedUser","checkedPlant","checkedAdmin","state","setState","then","res","json","data","getUser","user","userid","Paper","verticalAlign","getAdmin","admin","adminid","getPlant","plant","plantid","plantName","disease","cure","details","age","handleChange","FormGroup","row","FormControlLabel","control","Checkbox","toUpperCase","includes","thumb","marginRight","boxSizing","thumbInner","minWidth","overflow","img","StyledDrop","styled","div","StyledButton","StyledContainer","StyledParagraph","p","StyledImageLabel","ScanPlant","files","setFiles","uploadOpen","setUploadOpen","predictOpen","setPredictOpen","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","setPrediction","getRootProps","getInputProps","loading","setLoading","prediction","thumbs","src","forEach","revokeObjectURL","formData","FormData","append","mode","setTimeout","initialFormState","username","firstname","lastname","App","updateUser","a","Hub","listen","payload","currentAuthenticatedUser","checkUser","setAuthListener","persist","attributes","maxWdith","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","awsmobile","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c516171d.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#003049'\r\n        },\r\n        secondary: {\r\n            main: '#d62828'\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    TextField,\r\n    Divider,\r\n    Button,\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\r\n\r\nconst SignUp = props => {\r\n\r\n    const { signUp, onChange, formState, updateFormState } = props;\r\n\r\n    return (\r\n    //     <div>\r\n    //         <input name=\"username\" onChange={onChange} placeholder=\"Email\" />\r\n    //         <input name=\"password\" type=\"password\" onChange={onChange} placeholder=\"password\" />\r\n    //         {/* <input name=\"email\" onChange={onChange} placeholder=\"email\" /> */}\r\n    //         <input name=\"givenname\" onChange={onChange} placeholder=\"Given Name\" />\r\n    //         <input name=\"lastname\" onChange={onChange} placeholder=\"Last Name\" />\r\n    //         <button onClick={signUp}>Sign Up</button>\r\n    //         <button onClick={() => updateFormState(() => ({\r\n    //         ...formState, formType: \"signIn\"\r\n    //         }))}>\r\n    //         Sign In\r\n    //         </button>\r\n            \r\n    //   </div>\r\n\r\n\r\n    <div>\r\n    <div>\r\n        <div className=\"icon\">\r\n            <div className=\"icon_class\">\r\n                <PersonAddIcon fontSize=\"large\"/>\r\n            </div>\r\n            <div className=\"text\">Sign Up</div>\r\n        </div>\r\n    </div>\r\n    <Grid container spacing={3}>\r\n        <Grid item xs={6} md={6} lg={6}>\r\n            <TextField\r\n                name=\"firstname\"\r\n                id=\"firstname\"\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label=\"First Name\"\r\n                fullWidth\r\n            />\r\n        </Grid>\r\n        <Grid item xs={6} md={6} lg={6}>\r\n            <TextField \r\n                name=\"lastname\"\r\n                id=\"lastname\"\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                label=\"Last Name\"\r\n                fullWidth\r\n            />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12} lg={12}>\r\n            <TextField \r\n                name=\"username\" \r\n                id=\"username\" \r\n                onChange={onChange}\r\n                className=\"p-2\" \r\n                type=\"text\" \r\n                variant=\"outlined\" \r\n                label=\"Enter Email\" \r\n                fullWidth \r\n            />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12} lg={12}>\r\n            <TextField \r\n                name=\"password\"\r\n                id=\"password\" \r\n                onChange={onChange}\r\n                className=\"p-2\" \r\n                type=\"password\" \r\n                variant=\"outlined\" \r\n                label=\"Enter Password\" \r\n                fullWidth \r\n            />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12} lg={12}>\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                fullWidth\r\n                onClick={signUp}\r\n            >Create Account</Button>\r\n        </Grid>                \r\n\r\n        <Divider variant=\"middle\" />\r\n\r\n        <p className=\"text-center\">\r\n            <Link className=\"text-black-50\" onClick={() => updateFormState(() => ({...formState, formType: \"signIn\"}))}>\r\n                <h5>Already have an Account?</h5>\r\n            </Link>\r\n        </p>\r\n\r\n    </Grid>    \r\n    </div>\r\n    )\r\n}\r\n\r\nSignUp.propTypes = {\r\n\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Divider,\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n\r\nconst ConfirmSignUp = props => {\r\n\r\n    const { onChange, confirmSignUp, updateFormState, formState, authCode } = props;\r\n\r\n    return (\r\n        // <div>\r\n        //     <input name=\"authCode\" onChange={onChange} placeholder=\"Confirmation code\" />\r\n        //     <button onClick={confirmSignUp}>Confirm Sign Up</button>\r\n        // </div>\r\n\r\n        <div>\r\n            <div className=\"icon\">\r\n                <div className=\"icon_class\">\r\n                    <CheckBoxIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"text\">Confirm Sign Up</div>\r\n            </div>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                        name=\"authCode\"\r\n                        id=\"authCode\" \r\n                        onChange={onChange}\r\n                        className=\"p-2\" \r\n                        type=\"text\" \r\n                        variant=\"outlined\" \r\n                        label=\"Enter Confirmation Code\" \r\n                        fullWidth \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        onClick={confirmSignUp}\r\n                    >\r\n                        Submit Code\r\n                    </Button>\r\n                </Grid>\r\n\r\n                {/* <Divider variant=\"middle\" />\r\n                <p className=\"text-center\">\r\n                    <Link to=\"/\" className=\"text-black-50\" onClick={() => updateFormState(() => ({...formState, formType: \"signUp\"}))}>\r\n                        <h5>Create Account</h5>\r\n                    </Link>\r\n                </p> */}\r\n\r\n            </Grid>\r\n        </div>              \r\n    )\r\n}\r\n\r\nConfirmSignUp.propTypes = {\r\n\r\n}\r\n\r\nexport default ConfirmSignUp\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Divider,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst SignIn = props => {\r\n\r\n    const { onChange, signIn, formState, updateFormState } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"icon\">\r\n                <div className=\"icon_class\">\r\n                    <PersonIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"text\">Sign In</div>\r\n            </div>\r\n\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                        name=\"username\"\r\n                        id=\"username\" \r\n                        onChange={onChange}\r\n                        className=\"p-2\" \r\n                        type=\"text\" \r\n                        variant=\"outlined\" \r\n                        label=\"Enter Email\" \r\n                        fullWidth />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                        name=\"password\"\r\n                        id=\"password\" \r\n                        onChange={onChange}\r\n                        className=\"p-2\" \r\n                        type=\"password\" \r\n                        variant=\"outlined\" \r\n                        label=\"Enter Password\" \r\n                        fullWidth \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        onClick={signIn}\r\n                    >\r\n                        Log In\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" />\r\n                <p className=\"text-center\">\r\n                    <Link className=\"text-black-50\" onClick={() => updateFormState(() => ({...formState, formType: \"signUp\"}))}>\r\n                        <h5>Create Account</h5>\r\n                    </Link>\r\n                </p>\r\n\r\n            </Grid>\r\n        </div>        \r\n    )\r\n}\r\n\r\nSignIn.propTypes = {\r\n\r\n}\r\n\r\nexport default SignIn\r\n","export default __webpack_public_path__ + \"static/media/SFSA-06.6e1bf7a6.png\";","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { \r\n    Drawer, \r\n    List, \r\n    ListItem, \r\n    ListItemSecondaryAction,\r\n    ListItemText, \r\n    ListItemIcon,\r\n    IconButton,\r\n    makeStyles\r\n} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuIconContainer: {\r\n        marginLeft: 'auto',\r\n        color: '#fcfcfc'\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst DrawerComponent = ({ menuItems }) => {\r\n    const [openDrawer, setOpenDrawer] = useState(true);\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n\r\n    const handleListChange = (e, path) => {\r\n        history.push(path)\r\n        setOpenDrawer(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Drawer\r\n            className={classes.drawer}\r\n            anchor='right'\r\n            onClose={() => setOpenDrawer(false)}\r\n            open={openDrawer}\r\n        >\r\n            <List\r\n                className={classes.list}\r\n            >\r\n                {\r\n                    menuItems.map(item => (\r\n                    <ListItem key={item.path} divider button onClick={(e) => handleListChange(e, item.path)}>   \r\n                        <ListItemIcon >\r\n                        <ListItemText primary={item.title} />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        </Drawer>\r\n        <IconButton className={classes.menuIconContainer} onClick={() => setOpenDrawer(true)}>\r\n            <MenuIcon />\r\n        </IconButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrawerComponent\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { \r\n    AppBar, \r\n    Tab, \r\n    Tabs, \r\n    Typography, \r\n    Toolbar, \r\n    Button,\r\n    makeStyles,\r\n    Menu,\r\n    MenuList,\r\n    MenuItem,\r\n    useMediaQuery,\r\n    useTheme\r\n} from '@material-ui/core';\r\n\r\nimport HouseIcon from '@material-ui/icons/House';\r\nimport AccessibleIcon from '@material-ui/icons/Accessible';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport EcoIcon from '@material-ui/icons/Eco';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\n\r\nimport { GiBookAura } from 'react-icons/gi'\r\nimport { FiBookOpen } from 'react-icons/fi'\r\nimport { RiMoneyPoundCircleLine } from 'react-icons/ri'\r\nimport { BsFillPersonPlusFill, BsFillBrightnessHighFill } from 'react-icons/bs'\r\nimport { VscAccount } from 'react-icons/vsc'\r\nimport { ImHappy } from 'react-icons/im'\r\nimport { RiPlantFill } from 'react-icons/ri'\r\n\r\n\r\nimport DrawerComponent from './DrawerComponent/DrawerComponent'\r\n\r\nimport { Auth, Hub } from 'aws-amplify';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icons: {\r\n        fontSize: '1.4rem',\r\n    },\r\n    iconLogo: {\r\n        color: 'green',\r\n        fontSize: '3rem'\r\n    },\r\n    accountButton: {\r\n        marginLeft: 'auto',\r\n        '&:hover': {\r\n            background: 'green'\r\n        }\r\n    },\r\n    navbarSpacing: {\r\n        marginTop: '80px'\r\n    }\r\n\r\n}))\r\n\r\n\r\nconst menuItems = [\r\n    {\r\n        title: 'Home',\r\n        icon: <HouseIcon />,\r\n        path: '/'\r\n    },\r\n    {\r\n        title: 'Scan Plant',\r\n        icon: <LocalHospitalIcon />,\r\n        path: '/scanplant'\r\n    },\r\n    {\r\n        title: 'Add User',\r\n        icon: <PersonAddIcon />,\r\n        path: '/adduser'\r\n    },\r\n    {\r\n        title: 'Add Admin',\r\n        icon: <SupervisorAccountIcon />,\r\n        path: '/addadmin'\r\n    },\r\n    {\r\n        title: 'Add Plant',\r\n        icon: <EcoIcon />,\r\n        path: '/addplant'\r\n    },\r\n    {\r\n        title: 'Search',\r\n        icon: <FindInPageIcon />,\r\n        path: '/search'\r\n    }\r\n]\r\n\r\nconst Navbar = ({children}) => {\r\n    const classes = useStyles()\r\n    const [value, setValue] = useState(0)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const history = useHistory()\r\n\r\n    const handleClickTab = (e, newValue) => {\r\n        setValue(newValue)\r\n        console.log(newValue)\r\n    }\r\n\r\n    const handleOpenMenu = e => {\r\n        setAnchorEl(e.currentTarget);\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    // Breakpoints\r\n    const theme = useTheme()\r\n    // For the useMediaQuery() function, you can pass in the number of pixels or you \r\n    // can pass in a Material UI theme number.\r\n    // What the below is saying is that any side that is below the theme Breakpoint of \r\n    // small (sm) set isMatch to true.\r\n    const isMatch = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <>\r\n        <AppBar color='primary'>\r\n            <Toolbar>\r\n                <Typography>\r\n                    <RiPlantFill className={classes.iconLogo}/>\r\n                </Typography>\r\n                {\r\n                    isMatch ? (<DrawerComponent menuItems={menuItems} />) : (\r\n                        <>\r\n                            <Tabs\r\n                            onChange={handleClickTab} \r\n                            indicatorColor='secondary' \r\n                            value={value}\r\n                        >\r\n                            {/* disableRipple gets rid of the ripple effect when you click on the Tab */}\r\n                            {\r\n                                menuItems.map(item => (\r\n                                    <Tab icon={item.icon} disableRipple label={item.title} onClick={() => history.push(item.path)}/>\r\n                                ))\r\n                            }\r\n                        </Tabs>\r\n                        <Button\r\n                            aria-controls='menu'\r\n                            onClick={handleOpenMenu}\r\n                            className={classes.accountButton}\r\n                            color='secondary'\r\n                            variant='contained'\r\n                        >LOG OUT\r\n                        </Button>\r\n                    </>\r\n                    )\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Menu\r\n            style={{ marginTop: '50px' }}\r\n            id='menu' \r\n            onClose={handleMenuClose} \r\n            anchorEl={anchorEl} \r\n            open={Boolean(anchorEl)}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>\r\n                <span onClick={() => Auth.signOut()}>Logout</span>\r\n            </MenuItem>\r\n        </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\nimport Navbar from './NavBar/NavBar';\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    useMediaQuery,\r\n    useTheme\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navbarSpacing: {\r\n        marginTop: '65px'\r\n    },\r\n    page: {\r\n        height: '100vh',\r\n        background: '#ffffec'\r\n    }\r\n}))\r\n\r\nconst Layout = ({children}) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.page}>\r\n            <Navbar />\r\n            <div className={classes.navbarSpacing} />\r\n            {children}\r\n        </div>\r\n      );\r\n}\r\n\r\n\r\nexport default Layout;","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { \r\n    makeStyles,\r\n    CssBaseline,\r\n    Container,\r\n    Collapse,\r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { RiArrowGoBackFill } from 'react-icons/ri';\r\n\r\nconst useStyles = makeStyles({    \r\n    root: {\r\n        minHeight: '100vh',\r\n        // backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/forest-background.jpeg'})`,\r\n        backgroundImage: `url(${'./assets/forest-background.jpeg'})`,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat'\r\n    },\r\n    heading: {\r\n        paddingTop: '50px',\r\n    },\r\n    colorText: {\r\n        color: '#5AFF3D',\r\n    },\r\n    container: {\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        color: \"#fff\",\r\n        fontSize: '4.5rem'\r\n    },\r\n    titleLower: {\r\n        height: '30vh'\r\n    },\r\n    goDown: {\r\n      color: '#5AFF3D',\r\n      fontSize: '4rem',\r\n      backgroundColor: 'rgba(0,0,0,0.5)',\r\n      borderRadius: \"50%\"\r\n    },\r\n})\r\n\r\nconst HomePage = props => {\r\n    const classes = useStyles()\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setChecked(true);\r\n    }, []);    \r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Container>\r\n\r\n            <div className={classes.titleLower}></div>\r\n            <Collapse\r\n                in={checked}\r\n                {...(checked ? { timeout: 1000 } : {})}\r\n                collapsedHeight={50}\r\n            >\r\n                <div className={classes.container}>\r\n                <h1 className={classes.title}>\r\n                <span className={classes.colorText}>Plant</span> Doctor<br/>AI\r\n                </h1>\r\n                <Scroll to=\"place-to-visit\" smooth={true}>\r\n                    <IconButton>\r\n                    <ExpandMoreIcon className={classes.goDown} />\r\n                    </IconButton>\r\n                </Scroll>\r\n                </div>\r\n            </Collapse>\r\n\r\n                {/* <Typography\r\n                className={classes.heading}\r\n                variant=\"h1\"\r\n                align=\"center\"\r\n                color=\"primary\"\r\n                >\r\n                Plant Disease Detector\r\n                </Typography>   */}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nHomePage.propTypes = {\r\n\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport {\r\n    Grid,\r\n    GridItem,\r\n    Container,\r\n    Typography,\r\n    Button,\r\n    makeStyles\r\n} from '@material-ui/core'\r\n\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nconst useStyles = makeStyles({\r\n    containerStyle: {\r\n        paddingTop: '50px'\r\n    },\r\n    imagePanel: {\r\n        height: '350px',\r\n        border: '1px solid darkblue'\r\n    },\r\n    buttons: {\r\n        display: 'block',\r\n        marginBottom: '50px',\r\n        marginTop: '25px'\r\n    },\r\n    results: {\r\n        marginTop: '30px'\r\n    }\r\n})\r\n\r\nconst DetectDisease = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Container className={classes.containerStyle}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} className={classes.imagePanel}>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} align=\"center\">\r\n                    <div className={classes.buttons}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            size=\"large\" \r\n                            endIcon={<PhotoCamera />}\r\n                        >Upload Image\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.buttons}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            size=\"large\" \r\n                            endIcon={<BackspaceIcon />}\r\n                        >Remove Image\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.buttons}>\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\" \r\n                            size=\"large\" \r\n                            endIcon={<PlayCircleOutlineIcon />}\r\n                        >Execute Model\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    color=\"secondary\"\r\n                    className={classes.results}\r\n                >\r\n                    Results\r\n                </Typography>\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DetectDisease\r\n","import React, { useState } from 'react'\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    TextField,\r\n    Radio,\r\n    Button,\r\n    Snackbar\r\n} from '@material-ui/core'\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    containerStyle: {\r\n        paddingTop: '1em',\r\n        // paddingLeft: '10em',\r\n        // paddingRight: '10em'\r\n    },\r\n    field: {\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n        display: 'block'\r\n    }\r\n}))\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AddUser = () => {\r\n    const classes = useStyles()\r\n\r\n    // Fields\r\n    const [givenNames, setGivenNames] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [mobileNumber, setMobileNumber] = useState('')\r\n    const [business, setBusiness] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmpassword] = useState('')\r\n\r\n    // Errors\r\n    const [givenNamesError, setGivenNamesError] = useState(false)\r\n    const [lastNameError, setLastNameError] = useState(false)\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [mobileNumberError, setMobileNumberError] = useState(false)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [confirmpasswordError, setConfirmpasswordError] = useState(false)\r\n\r\n    // Snackbar\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        // Initialize errors to false\r\n        setGivenNamesError(false)\r\n        setLastNameError(false)\r\n        setEmailError(false)\r\n        setMobileNumberError(false)\r\n        setPasswordError(false)\r\n        setConfirmpasswordError(false)\r\n\r\n        // Error validation\r\n        if (givenNames == '') setGivenNamesError(true);\r\n        if (lastName == '') setLastNameError(true);\r\n        if (email == '') setEmailError(true);\r\n        if (mobileNumber == '') setMobileNumberError(true);\r\n        if (password == '') setPasswordError(true);\r\n        if (confirmpassword == '') setConfirmpasswordError(true);\r\n        if (password != confirmpassword) setConfirmpasswordError(true);\r\n\r\n        // POST to database\r\n        if (givenNames && lastName && email && mobileNumber && password && confirmpassword && password == confirmpassword) {\r\n            console.log(givenNames, lastName, email, mobileNumber);\r\n            fetch('http://localhost:9000/users', {\r\n              method: 'POST',\r\n              headers: {\r\n                \"Content-type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({\r\n                givenNames, lastName, email, mobileNumber, business, password, confirmpassword\r\n              })        \r\n            })\r\n            setOpen(true)\r\n            setGivenNames('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setMobileNumber('');\r\n            setBusiness('');\r\n            setPassword('')\r\n            setConfirmpassword('')\r\n            e.target.reset();\r\n          }        \r\n\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Container className={classes.containerStyle}>\r\n            <div className={classes.background}>\r\n                <h1>Add User</h1>\r\n                <form\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <TextField \r\n                        onChange={(e) => setGivenNames(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Given Names\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={givenNamesError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Last Name\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={lastNameError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Email\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={emailError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setMobileNumber(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Mobile Number\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={mobileNumberError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setBusiness(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Business/Farm\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                    />           \r\n                    <br/>\r\n                    <TextField \r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Type Password\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        type=\"password\"\r\n                        error={passwordError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setConfirmpassword(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Confirm Password\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        type=\"password\"\r\n                        error={confirmpasswordError}\r\n                    />       \r\n                    <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    size=\"large\"\r\n                    endIcon={<KeyboardArrowRightIcon />}\r\n                    >\r\n                        Submit\r\n                    </Button>                                                                                                                             \r\n                </form>\r\n\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                    New User Added!\r\n                    </Alert>\r\n                </Snackbar>                \r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    TextField,\r\n    Radio,\r\n    Button,\r\n    Snackbar\r\n} from '@material-ui/core'\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight'\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    containerStyle: {\r\n        paddingTop: '1em',\r\n        // paddingLeft: '10em',\r\n        // paddingRight: '10em'\r\n    },\r\n    field: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: 'block'        \r\n    }\r\n}))\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AddAdmin = () => {\r\n    const classes = useStyles()\r\n\r\n    const [givenNames, setGivenNames] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [mobileNumber, setMobileNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmpassword] = useState('')\r\n\r\n    const [givenNamesError, setGiveNamesError] = useState(false)\r\n    const [lastNameError, setLastNameError] = useState(false)\r\n    const [emailError, setEmailError] = useState(false)\r\n    const [mobileNumberError, setMobileNumberError] = useState(false)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [confirmpasswordError, setConfirmpasswordError] = useState(false)\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        setGiveNamesError(false)\r\n        setLastNameError(false)\r\n        setEmailError(false)\r\n        setMobileNumberError(false)\r\n        setPasswordError(false)\r\n        setConfirmpasswordError(false)\r\n        \r\n        console.log(givenNamesError)\r\n\r\n        if (givenNames == '') setGiveNamesError(true);\r\n        if (lastName == '') setLastNameError(true);\r\n        if (email == '') setEmailError(true);\r\n        if (mobileNumber == '') setMobileNumberError(true);\r\n        if (password == '') setPasswordError(true);\r\n        if (confirmpassword == '') setConfirmpasswordError(true);\r\n        if (password != confirmpassword) setConfirmpasswordError(true);\r\n\r\n        console.log(givenNamesError)\r\n\r\n        if (givenNames && lastName && email && mobileNumber && password && confirmpassword && password == confirmpassword) {\r\n            fetch('http://localhost:9000/admins', {\r\n              method: 'POST',\r\n              headers: {\r\n                \"Content-type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({\r\n                givenNames, lastName, email, mobileNumber, password, confirmpassword\r\n              })        \r\n            })\r\n            setOpen(true)\r\n            setGivenNames('');\r\n            setLastName('');\r\n            setEmail('');\r\n            setMobileNumber('');\r\n            setPassword('')\r\n            setConfirmpassword('')     \r\n            e.target.reset(); \r\n        }\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container className={classes.containerStyle}>\r\n            <div className={classes.background}>\r\n                <h1>Add Administrator</h1>\r\n                <form\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <TextField \r\n                        onChange={(e) => setGivenNames(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Given Names\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={givenNamesError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Last Name\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={lastNameError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Email\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={emailError}\r\n                    />\r\n                    <TextField \r\n                        onChange={(e) => setMobileNumber(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Mobile Number\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={mobileNumberError}\r\n                    />     \r\n                    <br/>\r\n                    <TextField \r\n                        type=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Type Password\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={passwordError}\r\n                    />\r\n                    <TextField \r\n                        type=\"password\"\r\n                        onChange={(e) => setConfirmpassword(e.target.value)}\r\n                        className={classes.field}\r\n                        label=\"Confirm Password\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={confirmpasswordError}\r\n                    />        \r\n                    <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    size=\"large\"\r\n                    endIcon={<KeyboardArrowRightIcon />}\r\n                    >\r\n                        Submit\r\n                    </Button>                                                                                                     \r\n                </form>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                    New Administrator Added!\r\n                    </Alert>\r\n                </Snackbar>                  \r\n            </div>\r\n        </Container> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAdmin\r\n","import React from 'react'\r\nimport {\r\n    Grid,\r\n    Button,\r\n    makeStyles,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles({\r\n    containerStyle: {\r\n        paddingTop: '1em',\r\n        // paddingLeft: '10em',\r\n        // paddingRight: '10em'\r\n    },    \r\n    buttons: {\r\n        marginTop: '25px',\r\n        marginBottom: '30px'\r\n    },\r\n    field: {\r\n        marginTop: '20px',\r\n        marginBottom: '20px',\r\n        display: 'block'        \r\n    }\r\n})\r\n\r\nconst AddPlant = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Container className={classes.containerStyle}>\r\n            <Grid container >\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} align=\"center\">\r\n                    <div className={classes.buttons}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            endIcon={<PhotoCamera />}\r\n                        >Upload Image\r\n                        </Button>\r\n                    </div>\r\n                    <form>\r\n                        <TextField\r\n                            className={classes.field}\r\n                            label=\"Plant Name\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            label=\"Disease\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            label=\"Cure\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            label=\"Age (months)\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            label=\"Height (cm)\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            className={classes.field}\r\n                            label=\"Details\"\r\n                            variant=\"filled\"\r\n                            placeholder=\"Details about the plant...\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={8}\r\n                        />\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AddPlant\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Typography,\r\n    Container,\r\n    makeStyles,\r\n    withStyles,\r\n    TextField,\r\n    Paper,\r\n    TableCell,\r\n    TableRow,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    FormGroup,\r\n    FormControlLabel\r\n} from '@material-ui/core'\r\n\r\nimport SearchComponent from '../components/SearchComponent'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { RiUserSharedFill } from 'react-icons/ri';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n    containerStyle: {\r\n        paddingTop: '2em',\r\n        // paddingLeft: '10em',\r\n        // paddingRight: '10em'\r\n    },\r\n    search: {\r\n        width: \"60%\",\r\n    },\r\n    searchfield: {\r\n        marginTop: \"2em\",\r\n        marginBottom: \"2em\"\r\n    },\r\n    searchFieldIcon: {\r\n        paddingTop: \"15px\",\r\n        paddingRight: \"10px\"\r\n    },\r\n    userPaper: {\r\n        padding: '10px',\r\n        width: '100%',\r\n        margin: \"5px\",\r\n        background: \"#ebfdff\",\r\n        display: \"inline-block\"\r\n    },\r\n    adminPaper: {\r\n        padding: '10px',\r\n        width: '100%',\r\n        margin: \"5px\",\r\n        background: \"#fff6ff\",\r\n        display: \"inline-block\"\r\n    },   \r\n    plantPaper: {\r\n        padding: '10px',\r\n        width: '100%',\r\n        margin: \"5px\",\r\n        background: \"#dffbdf\",\r\n        display: \"inline-block\"\r\n    },     \r\n    paperTitle: {\r\n        flexGrow: 1\r\n    },\r\n    subTitle: {\r\n        paddingLeft: '3em'\r\n    },\r\n    buttons: {\r\n        background: \"#000000\",\r\n        color: \"#fcfcfc\",\r\n        \"&:hover\": {\r\n            color: \"#000000\"\r\n        }\r\n    },\r\n    results: {\r\n        marginTop: '2em'\r\n    }\r\n})\r\n\r\n\r\nconst Search = () => {\r\n    const classes = useStyles()\r\n\r\n    const [filter, setFilter] = useState('')\r\n    const [users, setUsers] = useState(null)\r\n    const [admins, setAdmins] = useState(null)\r\n    const [plants, setPlants] = useState(null)\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedUser: true,\r\n        checkedPlant: false,\r\n        checkedAdmin: false\r\n      });\r\n\r\n    // https://jv4185vu77.execute-api.us-east-1.amazonaws.com/dev/users\r\n    useEffect(() => {\r\n        fetch('https://jv4185vu77.execute-api.us-east-1.amazonaws.com/dev/users')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUsers(data[\"Items\"])\r\n            console.log(data[\"Items\"])\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch('https://jv4185vu77.execute-api.us-east-1.amazonaws.com/dev/admins')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setAdmins(data[\"Items\"])\r\n            console.log(data[\"Items\"])\r\n        })\r\n    }, [])    \r\n\r\n    useEffect(() => {\r\n        fetch('https://jv4185vu77.execute-api.us-east-1.amazonaws.com/dev/plants')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPlants(data[\"Items\"])\r\n            console.log(data[\"Items\"])\r\n        })\r\n    }, [])      \r\n\r\n    const getUser = (user) => {\r\n        // console.log(result)\r\n        const userid = user.id - 1\r\n        // console.log(value)\r\n        const { id, givenNames, lastName, email, mobileNumber, business, password, confirmpassword } = users[userid];\r\n        if (users[userid]) {\r\n            return (\r\n                <Paper\r\n                className={classes.userPaper}\r\n                variant=\"outlined\"\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={4}>\r\n                            <Typography\r\n                                className={classes.paperTitle}\r\n                                variant=\"h5\"\r\n                                color=\"primary\"\r\n                            >\r\n                                <span style={{ color: '#0000ff', fontSize: '0.5em', verticalAlign: 'middle', paddingRight: '1em' }}>(User)</span>{givenNames} {lastName}\r\n                            </Typography>\r\n                            <Typography\r\n                                color=\"secondary\"\r\n                                className={classes.subTitle}\r\n                            >\r\n                                {business}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Typography>\r\n                                {email}\r\n                            </Typography>\r\n                            <Typography>\r\n                                {mobileNumber}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4} align=\"right\">\r\n                            <Button\r\n                            className={classes.buttons}\r\n                            variant=\"contained\"\r\n                            >\r\n                                Edit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n    const getAdmin = (admin) => {\r\n        // console.log(result)\r\n        const adminid = admin.id - 1\r\n        // console.log(value)\r\n        const { id, givenNames, lastName, email, mobileNumber, password, confirmpassword } = admins[adminid];\r\n        if (admins[adminid]) {\r\n            return (\r\n                <Paper\r\n                className={classes.adminPaper}\r\n                variant=\"outlined\"\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={4}>\r\n                            <Typography\r\n                                className={classes.paperTitle}\r\n                                variant=\"h5\"\r\n                                color=\"primary\"\r\n                            >\r\n                                <span style={{ color: '#800080', fontSize: '0.5em', verticalAlign: 'middle', paddingRight: '1em' }}>(Admin)</span>{givenNames} {lastName}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <Typography>\r\n                                {email}\r\n                            </Typography>\r\n                            <Typography>\r\n                                {mobileNumber}\r\n                            </Typography>                            \r\n                        </Grid>\r\n                        <Grid item xs={4} align=\"right\">\r\n                            <Button\r\n                            className={classes.buttons}\r\n                            variant=\"contained\"\r\n                            >\r\n                                Edit\r\n                            </Button>                           \r\n                        </Grid>                        \r\n                    </Grid>\r\n                </Paper>\r\n\r\n            )\r\n        }         \r\n    }\r\n\r\n    const getPlant = (plant) => {\r\n        // console.log(result)\r\n        const plantid = plant.id - 1\r\n        // console.log(value)\r\n        const { id, plantName, disease, cure, age, height, details } = plants[plantid];\r\n        if (plants[plantid]) {\r\n            return (\r\n                <Paper\r\n                className={classes.plantPaper}\r\n                variant=\"outlined\"\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={4}>\r\n                            <Typography\r\n                                className={classes.paperTitle}\r\n                                variant=\"h5\"\r\n                                color=\"primary\"\r\n                            >\r\n                                <span style={{ color: '#005600', fontSize: '0.5em', verticalAlign: 'middle', paddingRight: '1em' }}>(Plant)</span>{plantName}\r\n                            </Typography>\r\n                            <Typography color=\"secondary\" className={classes.subTitle}>\r\n                                Disease: {disease}\r\n                            </Typography>\r\n                            <Typography color=\"secondary\" className={classes.subTitle}>\r\n                                Cure: {cure}\r\n                            </Typography>                              \r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                                {details}\r\n                        </Grid>\r\n                        <Grid item xs={4} align=\"right\">\r\n                            <Button\r\n                            className={classes.buttons}\r\n                            variant=\"contained\"\r\n                            >\r\n                                Edit\r\n                            </Button>                           \r\n                        </Grid>                        \r\n                    </Grid>\r\n                </Paper>\r\n\r\n            )\r\n        }         \r\n    }\r\n\r\n    const handleSearchChange =e => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        console.log(state)\r\n    };\r\n\r\n    return (\r\n        <Container className={classes.containerStyle}>\r\n            <Typography\r\n            variant=\"h4\"\r\n            >\r\n                Search Page\r\n            </Typography>\r\n\r\n            {/* Search Functionality */}\r\n            <div className={classes.searchfield}>\r\n                <SearchIcon className={classes.searchFieldIcon}/>\r\n                <TextField \r\n                onChange={handleSearchChange}\r\n                className={classes.search}\r\n                label=\"Search\"\r\n                variant=\"filled\"\r\n                placeholder=\"Search for plant, disease, user...\"\r\n                />\r\n            </div>\r\n\r\n            {/* Checkboxes */}\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        checked={state.checkedUser}\r\n                        onChange={handleChange}\r\n                        name=\"checkedUser\"\r\n                        color=\"primary\"\r\n                    />\r\n                    }\r\n                    label=\"User\"\r\n                />  \r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        checked={state.checkedPlant}\r\n                        onChange={handleChange}\r\n                        name=\"checkedPlant\"\r\n                        color=\"primary\"\r\n                    />\r\n                    }\r\n                    label=\"Plant\"\r\n                />                     \r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        checked={state.checkedAdmin}\r\n                        onChange={handleChange}\r\n                        name=\"checkedAdmin\"\r\n                        color=\"primary\"\r\n                    />\r\n                    }\r\n                    label=\"Admin\"\r\n                />                                             \r\n            </FormGroup>\r\n\r\n            {/* Results */}\r\n            <div className={classes.results}>\r\n            {\r\n                users && state.checkedUser ? (\r\n                    users.map(user => (\r\n                    <div key={user.id - 1}>\r\n                        {\r\n                        (\r\n                            users[user.id - 1].givenNames.toUpperCase().includes(filter.toUpperCase()) || \r\n                            users[user.id - 1].lastName.toUpperCase().includes(filter.toUpperCase()) ||\r\n                            users[user.id - 1].email.toUpperCase().includes(filter.toUpperCase()) ||\r\n                            users[user.id - 1].business.toUpperCase().includes(filter.toUpperCase())\r\n                        )\r\n                        && users[user.id - 1] && filter != '' &&\r\n                        getUser(user)\r\n                        }\r\n                    </div>\r\n                ))\r\n                ) : null\r\n            }\r\n\r\n            {\r\n                admins && state.checkedAdmin ? (\r\n                        admins.map(admin => (\r\n                        <div key={admin.id - 1}>\r\n                            {\r\n                            (\r\n                                admins[admin.id - 1].givenNames.toUpperCase().includes(filter.toUpperCase()) || \r\n                                admins[admin.id - 1].lastName.toUpperCase().includes(filter.toUpperCase()) ||\r\n                                admins[admin.id - 1].email.toUpperCase().includes(filter.toUpperCase())\r\n                            )\r\n                            && admins[admin.id - 1] && filter != '' &&\r\n                            getAdmin(admin)\r\n                            }\r\n                        </div>\r\n                    ))\r\n                ) : null\r\n            }       \r\n\r\n            {\r\n                plants && state.checkedPlant ? (\r\n                    plants.map(plant => (\r\n                        <div key={plant.id - 1}>\r\n                            {\r\n                            (\r\n                                plants[plant.id - 1].plantName.toUpperCase().includes(filter.toUpperCase()) || \r\n                                plants[plant.id - 1].disease.toUpperCase().includes(filter.toUpperCase()) ||\r\n                                plants[plant.id - 1].cure.toUpperCase().includes(filter.toUpperCase()) ||\r\n                                plants[plant.id - 1].details.toUpperCase().includes(filter.toUpperCase())\r\n                            )\r\n                            && plants[plant.id - 1] && filter != '' &&\r\n                            getPlant(plant)\r\n                            }\r\n                        </div>\r\n                    ))\r\n                ) : null\r\n            }    \r\n            </div>                  \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Typography,\r\n    TextField,\r\n    makeStyles,\r\n    Button,\r\n    IconButton\r\n} from '@material-ui/core'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { GiCardJackClubs } from 'react-icons/gi';\r\n\r\nconst useStyles = makeStyles({\r\n    search: {\r\n        width: \"60%\",\r\n    },\r\n    searchfield: {\r\n        marginTop: \"1em\"\r\n    },\r\n    searchFieldIcon: {\r\n        paddingTop: \"15px\",\r\n        paddingRight: \"10px\"\r\n    }\r\n})\r\n\r\nconst SearchComponent = ({results, getUser}) => {\r\n    const classes = useStyles()\r\n    const [filter, setFilter] = useState('')\r\n\r\n    const handleSearchChange =e => {\r\n        setFilter(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.searchfield}>\r\n            <SearchIcon className={classes.searchFieldIcon}/>\r\n            <TextField \r\n            onChange={handleSearchChange}\r\n            className={classes.search}\r\n            label=\"Search\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Search for plant, disease, user...\"\r\n            />\r\n            {\r\n                results ? (\r\n                results.map(result => (\r\n                    <p key={result.id}>\r\n                        {\r\n                        (\r\n                            results[result.id - 1].givenNames.includes(filter) || \r\n                            results[result.id - 1].lastName.includes(filter) ||\r\n                            results[result.id - 1].email.includes(filter) ||\r\n                            results[result.id - 1].business.includes(filter)\r\n                        )\r\n                        && results[result.id - 1] && getUser(result.id - 1)\r\n                        }\r\n                    </p>\r\n                ))\r\n                ) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Snackbar,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader'\r\n\r\nconst thumbsContainer = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  flexWrap: 'wrap',\r\n  marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n  display: 'inline-flex',\r\n  borderRadius: 2,\r\n  border: '1px solid #eaeaea',\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 400,\r\n  height: 400,\r\n  padding: 4,\r\n  boxSizing: 'border-box',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto'\r\n};\r\n\r\nconst thumbInner = {\r\n  display: 'flex',\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n  display: 'block',\r\n  width: 'auto',\r\n  height: '100%'\r\n};\r\n\r\nconst StyledDrop = styled.div`\r\n  margin-top: 50px;\r\n  border: 4px dashed grey;\r\n  cursor: pointer;\r\n  padding: 20px;\r\n  display: inline-block;\r\n  &:hover {\r\n    border: 4px dashed green;\r\n    color: green;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 20px 10px;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledParagraph = styled.p`\r\n  font-size: 30px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst StyledImageLabel = styled(Typography)`\r\n  margin-top: 20px;\r\n`;\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ScanPlant = props => {\r\n\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const [uploadOpen, setUploadOpen] = React.useState(false);\r\n  const [predictOpen, setPredictOpen] = React.useState(false);\r\n\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    type: 'file',\r\n    name: 'file',\r\n    onDrop: acceptedFiles => {\r\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      })));\r\n      setPrediction('')\r\n    }\r\n  });\r\n  \r\n  const removeImage = () => {\r\n    setFiles([])\r\n    setPrediction('')\r\n  }\r\n\r\n  const submitImage = () => {\r\n\r\n      let formData = new FormData()\r\n      formData.append('file', files[0])\r\n\r\n      console.log(formData)\r\n      fetch(\"https://jv4185vu77.execute-api.us-east-1.amazonaws.com/dev/upload\", {\r\n        method: 'POST',\r\n        mode: 'no-cors',\r\n        body: formData\r\n      })\r\n\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        setLoading(false)\r\n      }, 5000);\r\n\r\n      setUploadOpen(true)\r\n\r\n  }\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // useEffect(() => {\r\n  //   setLoading(true)\r\n  //   setTimeout(() => {\r\n  //     setLoading(false)\r\n  //   }, 4000);\r\n  // }, [])\r\n\r\n  const [prediction, setPrediction] = useState('')\r\n\r\n  const getPrediction = () => {\r\n\r\n    fetch(\"https://jv4185vu77.execute-api.us-east-1.amazonaws.com/dev/predict\")\r\n    .then(res => res.json())\r\n    .then(data => setPrediction(data))\r\n\r\n    setPredictOpen(true)\r\n}\r\n\r\n  const thumbs = files.map(file => (\r\n    <>\r\n    <div style={thumb} key={file.name[\"Items\"]}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n          onChange={() => console.log(file)}\r\n        />\r\n      </div>\r\n    </div>\r\n    <StyledImageLabel\r\n      variant=\"h4\"\r\n      color=\"secondary\"\r\n    >\r\n      Image Name:\r\n    </StyledImageLabel>\r\n    <StyledParagraph>{file.name}</StyledParagraph>\r\n    </>\r\n  ));\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setUploadOpen(false);\r\n    setPredictOpen(false);\r\n  };\r\n\r\n  useEffect(() => () => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <>\r\n        <StyledContainer>\r\n          <StyledDrop {...getRootProps({className: 'dropzone'})}>\r\n            <input type=\"file\" name=\"file\" {...getInputProps()} />\r\n            <p>Drag 'n' Drop Image here, or Click to Select Image</p>\r\n          </StyledDrop>\r\n          <div>\r\n              <StyledButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={removeImage}\r\n              >\r\n                Remove Image \r\n              </StyledButton>\r\n          </div>\r\n          <aside>\r\n            {thumbs}\r\n          </aside>\r\n          <div>\r\n            <StyledButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={submitImage}\r\n            >\r\n              Upload Image\r\n            </StyledButton>\r\n          </div>\r\n          {\r\n            loading ?\r\n            (<ClipLoader size={30} color={'#F37A24'} loading={loading} />) :\r\n            (\r\n              <div>\r\n              <StyledButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={getPrediction}\r\n                >\r\n                  Predict\r\n                </StyledButton>\r\n              </div>\r\n            )\r\n          }\r\n          <div>\r\n            {\r\n              prediction != '' ? (\r\n              <div>\r\n              <StyledImageLabel\r\n                variant=\"h4\"\r\n                color=\"secondary\"\r\n              >\r\n                Prediction:\r\n              </StyledImageLabel>\r\n              <StyledParagraph>{prediction}</StyledParagraph>\r\n              </div>\r\n              ) : null\r\n            }\r\n          </div>\r\n          </StyledContainer>\r\n          <Snackbar open={uploadOpen} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              Image Uploaded!\r\n            </Alert>\r\n          </Snackbar>\r\n          <Snackbar open={predictOpen} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"info\">\r\n              Prediction Made!\r\n            </Alert>\r\n          </Snackbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ScanPlant;","import React, { useState, useEffect } from 'react';\r\n\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { Switch, BrowserRouter as Router, Route, useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  ThemeProvider\r\n} from '@material-ui/core'\r\nimport styled from 'styled-components';\r\n\r\nimport theme from './utils/theme';\r\n\r\nimport { Auth, Hub } from 'aws-amplify';\r\n\r\nimport SignUp from './components/Authentication/SignUp';\r\nimport ConfirmSignUp from './components/Authentication/ConfirmSignUp';\r\nimport SignIn from './components/Authentication/SignIn';\r\nimport SignOut from './components/Authentication/SignOut';\r\n\r\nimport logo from './assets/SFSA-06.png';\r\n\r\nimport Layout from './components/Layout'\r\nimport HomePage from './pages/HomePage'\r\nimport DetectDisease from './pages/DetectDisease'\r\nimport AddUser from './pages/AddUser'\r\nimport AddAdmin from './pages/AddAdmin'\r\nimport AddPlant from './pages/AddPlant'\r\nimport Search from './pages/Search'\r\nimport ScanPlant from './pages/ScanPlant'\r\n\r\nconst initialFormState = {\r\n  username: '',\r\n  password: '',\r\n  firstname: '',\r\n  lastname: '',\r\n  // email: '',\r\n  authCode: '',\r\n  formType: 'signUp'\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      textAlign: 'center',\r\n      padding: '40px',\r\n      marginTop: '10px'\r\n    },\r\n    heading: {\r\n      textAlign: 'center',\r\n      fontSize: '80px',\r\n      color: 'white',\r\n      marginBottom: '50px',\r\n      padding: '100px 80px',\r\n      // backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/small-plant.jpeg'})`,\r\n      backgroundImage: `url('./assets/small-plant.jpeg')`,\r\n      backgroundSize: 'cover',\r\n      backgroundRepeat: 'no-repeat'\r\n    },\r\n    icon: {\r\n      height: '200px',\r\n      width: '200px'\r\n    },\r\n    container: {\r\n      paddingLeft: '100px',\r\n      paddingRight: '100px'\r\n    }\r\n});\r\n\r\nconst Home = () => {\r\n  return (\r\n    <h1>Home</h1>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [formState, updateFormState] = useState(initialFormState);\r\n  const [user, updateUser] = useState(null);\r\n\r\n  const history = useHistory()\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    checkUser();\r\n    setAuthListener();\r\n  }, [])\r\n\r\n  async function setAuthListener() {\r\n    Hub.listen('auth', (data) => {\r\n      switch (data.payload.event) {\r\n        case 'signOut':\r\n          console.log(data);\r\n          updateFormState(() => ({ ...formState, formType: \"signUp\" }));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  async function checkUser() {\r\n    try {\r\n      const user = await Auth.currentAuthenticatedUser();\r\n      console.log('user: ', user);\r\n      updateUser(user);\r\n      updateFormState(() => ({ ...formState, formType: \"signedIn\" }));\r\n    } catch(err) {\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    e.persist()\r\n    updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }))\r\n  }\r\n\r\n  const { formType } = formState\r\n\r\n  async function signUp() {\r\n    const { username, password, firstname, lastname } = formState;\r\n    console.log(`username: ${username}`);\r\n    console.log(`password: ${password}`);\r\n    console.log(`firstname: ${firstname}`);\r\n    console.log(`lastname: ${lastname}`);\r\n    await Auth.signUp({ username, password, attributes: { 'custom:firstname': firstname, 'custom:lastname': lastname } });\r\n    updateFormState(() => ({ ...formState, formType: \"confirmSignUp\" }))\r\n  }\r\n\r\n  async function confirmSignUp() {\r\n    const { username, authCode } = formState;\r\n    await Auth.confirmSignUp(username, authCode);\r\n    updateFormState(() => ({ ...formState, formType: \"signIn\" }));\r\n  }\r\n\r\n  async function signIn() {\r\n    const { username, password } = formState;\r\n    await Auth.signIn(username, password);\r\n    updateFormState(() => ({ ...formState, formType: \"signedIn\" }));\r\n    history.push(\"/\")\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className=\"App\">\r\n      <Container maxWdith=\"md\" className={classes.container}>\r\n      {/* <img src={logo} className={classes.icon}/> */}\r\n      {\r\n        formType === 'signUp' && (\r\n          <>\r\n            <h1 className={classes.heading}>Plant Doctor AI</h1>\r\n            <SignUp \r\n            signUp={signUp}\r\n            onChange={onChange}\r\n            formState={formState}\r\n            updateFormState={updateFormState}\r\n          />\r\n          </>\r\n        )\r\n      }\r\n\r\n      {\r\n        formType === 'confirmSignUp' && (\r\n          <>\r\n          <h1 className={classes.heading}>Plant Doctor AI</h1>\r\n          <ConfirmSignUp\r\n            onChange={onChange}\r\n            confirmSignUp={confirmSignUp}\r\n          />\r\n          </>\r\n\r\n        )\r\n      }\r\n\r\n      {\r\n        formType === 'signIn' && (\r\n          <>\r\n          <h1 className={classes.heading}>Plant Doctor AI</h1>\r\n          <SignIn\r\n            signIn={signIn}\r\n            onChange={onChange}\r\n            formState={formState}\r\n            updateFormState={updateFormState}\r\n          />\r\n          </>\r\n        )\r\n      }\r\n      </Container>\r\n      {\r\n        formType === 'signedIn' && (\r\n          <>\r\n            <ThemeProvider theme={theme}>\r\n                <Layout>\r\n                  <Switch>\r\n                    <Route exact path=\"/\" >\r\n                      <HomePage />\r\n                    </Route>\r\n                    <Route exact path=\"/scanplant\" >\r\n                      <ScanPlant />\r\n                    </Route>\r\n                    <Route exact path=\"/adduser\" >\r\n                      <AddUser />\r\n                    </Route>\r\n                    <Route exact path=\"/addadmin\" >\r\n                      <AddAdmin />\r\n                    </Route>     \r\n                    <Route exact path=\"/addplant\" >\r\n                      <AddPlant />\r\n                    </Route> \r\n                    <Route exact path=\"/search\" >\r\n                      <Search />\r\n                    </Route>\r\n                  </Switch>\r\n                </Layout>\r\n            </ThemeProvider>\r\n          </>\r\n        )\r\n      } \r\n\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable */\r\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\r\n\r\nconst awsmobile = {\r\n    \"aws_project_region\": \"us-east-1\",\r\n    \"aws_cognito_identity_pool_id\": \"us-east-1:17152c0a-12e0-41e3-b683-ab663af426aa\",\r\n    \"aws_cognito_region\": \"us-east-1\",\r\n    \"aws_user_pools_id\": \"us-east-1_RhEO8a1eE\",\r\n    \"aws_user_pools_web_client_id\": \"16i9mtdu9ib9vls4c7hfs2nuel\",\r\n    \"oauth\": {}\r\n};\r\n\r\n\r\nexport default awsmobile;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Switch, BrowserRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport Amplify from 'aws-amplify';\r\nimport config from './aws-exports';\r\n\r\nAmplify.configure(config);\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}